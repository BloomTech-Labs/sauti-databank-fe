{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\mesty\\\\Lambda\\\\Forked-Lambda-Copies\\\\labs 19\\\\sauti-databank-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar mockData = [{\n  gender: \"Male\",\n  procedurecommodity: \"Maize,Maize\"\n}, {\n  gender: \"Female\",\n  procedurecommodity: \"Beans\"\n}, {\n  gender: \"Female\",\n  procedurecommodity: \"Maize,Maize,Maize,Beans,Dylan\"\n}, {\n  gender: \"Male\",\n  procedurecommodity: \"Maize\"\n}, {\n  gender: null,\n  procedurecommodity: \"Maize,Bananas\"\n}];\nvar messedUpData = [{\n  gender: \"Female,Male,What,Are,You,Doing\",\n  procedurecommodity: \"Maize,Maize,Maize,Beans,Dylan\"\n}, {\n  gender: \"Female\",\n  procedurecommodity: \"Maize,s,Dylan\"\n}, {\n  gender: \"Male\",\n  procedurecommodity: \"Maize,Ma,Beans,Dylan\"\n}, {\n  gender: \"Female,Male,Doing\",\n  procedurecommodity: \"Maizeze,Beans,Dylan\"\n}, {\n  gender: \"Female,Male,Doing\",\n  procedurecommodity: \"Maizez\"\n}];\n\nfunction removeMultiple(data) {\n  var keys = Object.keys(data[0]); // [gender, procedurecommodity]\n\n  var tempData = data.map(function (item) {\n    return item;\n  });\n  keys.forEach(function (key) {\n    tempData.map(function (obj) {\n      if (obj[key] && obj[key] !== null && obj[key].includes(\",\")) {\n        var split = obj[key].split(',');\n        obj[key] = split[0];\n        split.splice(1).forEach(function (value) {\n          data.push(_defineProperty({}, key, value));\n        });\n      }\n    });\n  });\n  console.log('removeMultiple Ran Bro', data);\n  return tempData;\n}\n\nexport default removeMultiple;","map":{"version":3,"sources":["C:/Users/mesty/Lambda/Forked-Lambda-Copies/labs 19/sauti-databank-fe/src/Components/removeMultiple.js"],"names":["mockData","gender","procedurecommodity","messedUpData","removeMultiple","data","keys","Object","tempData","map","item","forEach","key","obj","includes","split","splice","value","push","console","log"],"mappings":";AAAA,IAAMA,QAAQ,GAAG,CACb;AAACC,EAAAA,MAAM,EAAE,MAAT;AAAiBC,EAAAA,kBAAkB,EAAE;AAArC,CADa,EAEb;AAACD,EAAAA,MAAM,EAAE,QAAT;AAAmBC,EAAAA,kBAAkB,EAAE;AAAvC,CAFa,EAGb;AAACD,EAAAA,MAAM,EAAE,QAAT;AAAmBC,EAAAA,kBAAkB,EAAE;AAAvC,CAHa,EAIb;AAACD,EAAAA,MAAM,EAAE,MAAT;AAAiBC,EAAAA,kBAAkB,EAAE;AAArC,CAJa,EAKb;AAACD,EAAAA,MAAM,EAAE,IAAT;AAAeC,EAAAA,kBAAkB,EAAC;AAAlC,CALa,CAAjB;AAQA,IAAMC,YAAY,GAAG,CACjB;AAACF,EAAAA,MAAM,EAAE,gCAAT;AAA2CC,EAAAA,kBAAkB,EAAE;AAA/D,CADiB,EAEjB;AAACD,EAAAA,MAAM,EAAE,QAAT;AAAmBC,EAAAA,kBAAkB,EAAE;AAAvC,CAFiB,EAGjB;AAACD,EAAAA,MAAM,EAAE,MAAT;AAAiBC,EAAAA,kBAAkB,EAAE;AAArC,CAHiB,EAIjB;AAACD,EAAAA,MAAM,EAAE,mBAAT;AAA8BC,EAAAA,kBAAkB,EAAE;AAAlD,CAJiB,EAKjB;AAACD,EAAAA,MAAM,EAAE,mBAAT;AAA8BC,EAAAA,kBAAkB,EAAE;AAAlD,CALiB,CAArB;;AAQA,SAASE,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,IAAI,CAAC,CAAD,CAAhB,CAAX,CAD0B,CAE1B;;AACA,MAAIG,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAAS,UAAAC,IAAI;AAAA,WAAIA,IAAJ;AAAA,GAAb,CAAf;AACAJ,EAAAA,IAAI,CAACK,OAAL,CAAa,UAAAC,GAAG,EAAI;AAChBJ,IAAAA,QAAQ,CAACC,GAAT,CAAa,UAAAI,GAAG,EAAI;AAChB,UAAGA,GAAG,CAACD,GAAD,CAAH,IAAYC,GAAG,CAACD,GAAD,CAAH,KAAa,IAAzB,IAAiCC,GAAG,CAACD,GAAD,CAAH,CAASE,QAAT,CAAkB,GAAlB,CAApC,EAA2D;AACvD,YAAIC,KAAK,GAAGF,GAAG,CAACD,GAAD,CAAH,CAASG,KAAT,CAAe,GAAf,CAAZ;AACAF,QAAAA,GAAG,CAACD,GAAD,CAAH,GAAWG,KAAK,CAAC,CAAD,CAAhB;AACAA,QAAAA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBL,OAAhB,CAAwB,UAAAM,KAAK,EAAI;AAC7BZ,UAAAA,IAAI,CAACa,IAAL,qBAAYN,GAAZ,EAAkBK,KAAlB;AACH,SAFD;AAGH;AACJ,KARD;AASH,GAVD;AAWAE,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCf,IAAtC;AACA,SAAOG,QAAP;AACH;;AAID,eAAeJ,cAAf","sourcesContent":["const mockData = [\r\n    {gender: \"Male\", procedurecommodity: \"Maize,Maize\"},\r\n    {gender: \"Female\", procedurecommodity: \"Beans\"},\r\n    {gender: \"Female\", procedurecommodity: \"Maize,Maize,Maize,Beans,Dylan\"},\r\n    {gender: \"Male\", procedurecommodity: \"Maize\"},\r\n    {gender: null, procedurecommodity:\"Maize,Bananas\"},\r\n]\r\n\r\nconst messedUpData = [\r\n    {gender: \"Female,Male,What,Are,You,Doing\", procedurecommodity: \"Maize,Maize,Maize,Beans,Dylan\"},\r\n    {gender: \"Female\", procedurecommodity: \"Maize,s,Dylan\"},\r\n    {gender: \"Male\", procedurecommodity: \"Maize,Ma,Beans,Dylan\"},\r\n    {gender: \"Female,Male,Doing\", procedurecommodity: \"Maizeze,Beans,Dylan\"},\r\n    {gender: \"Female,Male,Doing\", procedurecommodity: \"Maizez\"},\r\n]\r\n\r\nfunction removeMultiple(data) {\r\n    let keys = Object.keys(data[0])\r\n    // [gender, procedurecommodity]\r\n    let tempData = data.map(item => item)\r\n    keys.forEach(key => {\r\n        tempData.map(obj => {\r\n            if(obj[key] && obj[key] !== null && obj[key].includes(\",\")){\r\n                let split = obj[key].split(',')\r\n                obj[key] = split[0]\r\n                split.splice(1).forEach(value => {\r\n                    data.push({[key]: value})\r\n                })  \r\n            }           \r\n        })\r\n    })\r\n    console.log('removeMultiple Ran Bro', data)\r\n    return tempData\r\n}\r\n\r\n\r\n\r\nexport default removeMultiple\r\n"]},"metadata":{},"sourceType":"module"}