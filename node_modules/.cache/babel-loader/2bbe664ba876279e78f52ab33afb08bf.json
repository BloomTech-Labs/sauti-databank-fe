{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\mesty\\\\Lambda\\\\Forked-Lambda-Copies\\\\labs 19\\\\sauti-databank-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\mesty\\\\Lambda\\\\Forked-Lambda-Copies\\\\labs 19\\\\sauti-databank-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mesty\\\\Lambda\\\\Forked-Lambda-Copies\\\\labs 19\\\\sauti-databank-fe\\\\src\\\\Components\\\\Graph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport CsvDownloader from 'react-csv-downloader';\n\nvar Graph = function Graph(props) {\n  console.log('keys in graph', props.keys);\n  console.log('data in graph', props.data);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      csvHeaders = _useState2[0],\n      setCsvHeaders = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      csvFormattedData = _useState4[0],\n      setCsvFormattedData = _useState4[1];\n\n  console.log('Index in Graph', props.crossFilter);\n  console.log('CsvData in Graph', props.data); // console.log('Keys in Graph', props.keys);\n\n  useEffect(function () {\n    if (props.filteredData && props.checkboxOptions !== props.filtgiteredData) {\n      props.setCheckboxOptions(props.filteredData);\n    }\n  }, []); //Gets headers for CSV. \n\n  var headers = function headers(data) {\n    var allHeaders = []; //no crossfilter\n\n    if (!props.crossFilter) {\n      console.log(\"HIT\");\n      allHeaders = [props.index];\n      allHeaders.push({\n        id: \"\".concat(props.sampleSize),\n        displayName: \"Sample Size: \".concat(props.sampleSize)\n      });\n    } else {\n      allHeaders = [{\n        id: \"\".concat(props.index),\n        displayName: \"\".concat(props.index)\n      }].concat(_toConsumableArray(props.keys), [{\n        id: \"\".concat(props.additionalFilter)\n      }, {\n        id: \"\".concat(props.sampleSize),\n        displayName: \"Sample Size: \".concat(props.sampleSize)\n      }]);\n    }\n\n    return allHeaders;\n  };\n\n  var csvFormater = function csvFormater(data) {\n    //if there's additionalFilter \n    if (props.additionalFilter) {\n      data = data.map(function (obj) {\n        var key = Object.keys(props.selectedCheckbox)[0];\n        var val = Object.values(props.selectedCheckbox)[0];\n        var o = Object.assign({}, obj);\n        o[key] = val;\n        return o;\n      });\n    }\n\n    return data.map(function (obj) {\n      return Object.values(obj);\n    });\n  };\n\n  var fileName = '';\n  fileName = \"\".concat(props.index && props.index).concat(props.crossFilter && '_by_' + props.crossFilter).concat(props.additionalFilter && \"_where_\".concat(props.additionalFilter, \":(\").concat(Object.values(props.selectedCheckbox)[0], \")\"));\n  useEffect(function () {\n    setCsvFormattedData(csvFormater(props.csvData));\n    setCsvHeaders(headers(props.csvData));\n  }, [props.csvData]);\n  console.log(\"formater\", csvFormattedData);\n  return React.createElement(\"div\", {\n    className: \"Graph-Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dwnld-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(CsvDownloader, {\n    datas: csvFormattedData,\n    columns: csvHeaders,\n    filename: fileName,\n    suffix: \"\".concat(new Date().toISOString()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Download\\u2BC6\"))), React.createElement(ResponsiveBar, {\n    data: props.data,\n    keys: props.keys,\n    indexBy: props.index,\n    groupMode: props.groupMode // Possibly add toggle selector to change group mode.\n    ,\n    margin: {\n      top: 50,\n      right: 170,\n      bottom: 75,\n      left: 80\n    },\n    padding: 0.3,\n    innerPadding: 3,\n    maxValue: 100,\n    colors: {\n      scheme: \"nivo\"\n    },\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    tooltip: function tooltip(_ref) {\n      var id = _ref.id,\n          value = _ref.value;\n      return React.createElement(\"strong\", {\n        style: {\n          color: \"#000000\",\n          fontSize: \"15px\",\n          fontFamily: \"Helvetica\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, id, \": \", value, \"%\");\n    },\n    labelFormat: function labelFormat(d) {\n      return React.createElement(\"tspan\", {\n        y: -15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, d, \"% \");\n    },\n    labelForm: function labelForm(d) {\n      return React.createElement(\"text\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, d, \"% \");\n    },\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: props.label + \" (values as percent of total),\" + \" sample size = \".concat(props.sampleSize),\n      legendPosition: \"middle\",\n      legendOffset: 35\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: \"Percentage\",\n      // Possibly toggle percentage or number in future release\n      legendPosition: \"middle\",\n      legendOffset: -60\n    },\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1.6]]\n    },\n    legends: [{\n      dataFrom: \"keys\",\n      anchor: \"bottom-right\",\n      direction: \"column\",\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: \"left-to-right\",\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [{\n        on: \"hover\",\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n};\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/mesty/Lambda/Forked-Lambda-Copies/labs 19/sauti-databank-fe/src/Components/Graph.js"],"names":["React","useState","useEffect","ResponsiveBar","CsvDownloader","Graph","props","console","log","keys","data","csvHeaders","setCsvHeaders","csvFormattedData","setCsvFormattedData","crossFilter","filteredData","checkboxOptions","filtgiteredData","setCheckboxOptions","headers","allHeaders","index","push","id","sampleSize","displayName","additionalFilter","csvFormater","map","obj","key","Object","selectedCheckbox","val","values","o","assign","fileName","csvData","Date","toISOString","groupMode","top","right","bottom","left","scheme","from","modifiers","value","color","fontSize","fontFamily","d","tickSize","tickPadding","tickRotation","legend","label","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACG,IAAnC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACI,IAAnC;;AAFqB,kBAIeT,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,MAIdU,UAJc;AAAA,MAIFC,aAJE;;AAAA,mBAK2BX,QAAQ,CAAC,EAAD,CALnC;AAAA;AAAA,MAKdY,gBALc;AAAA,MAKIC,mBALJ;;AAMrBP,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAAK,CAACS,WAApC;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAK,CAACI,IAAtC,EAPqB,CAQrB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,KAAK,CAACU,YAAN,IAAsBV,KAAK,CAACW,eAAN,KAA0BX,KAAK,CAACY,eAA1D,EAA2E;AACzEZ,MAAAA,KAAK,CAACa,kBAAN,CAAyBb,KAAK,CAACU,YAA/B;AACD;AACF,GAJQ,EAIN,EAJM,CAAT,CAVqB,CAgBrB;;AACA,MAAII,OAAO,GAAG,SAAVA,OAAU,CAACV,IAAD,EAAU;AACtB,QAAIW,UAAU,GAAG,EAAjB,CADsB,CAEtB;;AACA,QAAI,CAACf,KAAK,CAACS,WAAX,EAAwB;AACtBR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAa,MAAAA,UAAU,GAAG,CAACf,KAAK,CAACgB,KAAP,CAAb;AACAD,MAAAA,UAAU,CAACE,IAAX,CAAgB;AAAEC,QAAAA,EAAE,YAAKlB,KAAK,CAACmB,UAAX,CAAJ;AAA6BC,QAAAA,WAAW,yBAAkBpB,KAAK,CAACmB,UAAxB;AAAxC,OAAhB;AACD,KAJD,MAIO;AACLJ,MAAAA,UAAU,IACR;AAAEG,QAAAA,EAAE,YAAKlB,KAAK,CAACgB,KAAX,CAAJ;AAAwBI,QAAAA,WAAW,YAAKpB,KAAK,CAACgB,KAAX;AAAnC,OADQ,4BAELhB,KAAK,CAACG,IAFD,IAGR;AAAEe,QAAAA,EAAE,YAAKlB,KAAK,CAACqB,gBAAX;AAAJ,OAHQ,EAIR;AAAEH,QAAAA,EAAE,YAAKlB,KAAK,CAACmB,UAAX,CAAJ;AAA6BC,QAAAA,WAAW,yBAAkBpB,KAAK,CAACmB,UAAxB;AAAxC,OAJQ,EAAV;AAMD;;AACD,WAAOJ,UAAP;AACD,GAhBD;;AAkBA,MAAIO,WAAW,GAAG,SAAdA,WAAc,CAAClB,IAAD,EAAU;AAC1B;AACA,QAAIJ,KAAK,CAACqB,gBAAV,EAA4B;AAC1BjB,MAAAA,IAAI,GAAGA,IAAI,CAACmB,GAAL,CAAS,UAAAC,GAAG,EAAI;AACrB,YAAIC,GAAG,GAAGC,MAAM,CAACvB,IAAP,CAAYH,KAAK,CAAC2B,gBAAlB,EAAoC,CAApC,CAAV;AACA,YAAIC,GAAG,GAAGF,MAAM,CAACG,MAAP,CAAc7B,KAAK,CAAC2B,gBAApB,EAAsC,CAAtC,CAAV;AACA,YAAIG,CAAC,GAAGJ,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBP,GAAlB,CAAR;AACAM,QAAAA,CAAC,CAACL,GAAD,CAAD,GAASG,GAAT;AACA,eAAOE,CAAP;AACD,OANM,CAAP;AAOD;;AACD,WAAO1B,IAAI,CAACmB,GAAL,CAAS,UAAAC,GAAG,EAAG;AAAC,aAAOE,MAAM,CAACG,MAAP,CAAcL,GAAd,CAAP;AAA0B,KAA1C,CAAP;AACD,GAZD;;AAcA,MAAIQ,QAAQ,GAAG,EAAf;AACAA,EAAAA,QAAQ,aAAMhC,KAAK,CAACgB,KAAN,IAAehB,KAAK,CAACgB,KAA3B,SAAmChB,KAAK,CAACS,WAAN,IAAsB,SAAST,KAAK,CAACS,WAAxE,SAAuFT,KAAK,CAACqB,gBAAN,qBAAoCrB,KAAK,CAACqB,gBAA1C,eAA+DK,MAAM,CAACG,MAAP,CAAc7B,KAAK,CAAC2B,gBAApB,EAAsC,CAAtC,CAA/D,MAAvF,CAAR;AAEA/B,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,mBAAmB,CAACc,WAAW,CAACtB,KAAK,CAACiC,OAAP,CAAZ,CAAnB;AACA3B,IAAAA,aAAa,CAACQ,OAAO,CAACd,KAAK,CAACiC,OAAP,CAAR,CAAb;AACD,GAHQ,EAGN,CAACjC,KAAK,CAACiC,OAAP,CAHM,CAAT;AAIAhC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,gBAAxB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEA,gBADT;AAEE,IAAA,OAAO,EAAEF,UAFX;AAGE,IAAA,QAAQ,EAAE2B,QAHZ;AAIE,IAAA,MAAM,YAAK,IAAIE,IAAJ,GAAWC,WAAX,EAAL,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALD,CADF,CADF,EASE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAEnC,KAAK,CAACI,IADd;AAEE,IAAA,IAAI,EAAEJ,KAAK,CAACG,IAFd;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACgB,KAHjB;AAIE,IAAA,SAAS,EAAEhB,KAAK,CAACoC,SAJnB,CAI8B;AAJ9B;AAKE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,GAAlB;AAAuBC,MAAAA,MAAM,EAAE,EAA/B;AAAmCC,MAAAA,IAAI,EAAE;AAAzC,KALV;AAME,IAAA,OAAO,EAAE,GANX;AAOE,IAAA,YAAY,EAAE,CAPhB;AAQE,IAAA,QAAQ,EAAE,GARZ;AASE,IAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KATV;AAUE,IAAA,WAAW,EAAE;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW,GAAX,CAAD;AAA5B,KAVf;AAWE,IAAA,OAAO,EAAE,IAXX;AAYE,IAAA,SAAS,EAAE,IAZb;AAaE,IAAA,OAAO,EAAE;AAAA,UAAGzB,EAAH,QAAGA,EAAH;AAAA,UAAO0B,KAAP,QAAOA,KAAP;AAAA,aACP;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,SADF;AAELC,UAAAA,QAAQ,EAAE,MAFL;AAGLC,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG7B,EAPH,QAOS0B,KAPT,MADO;AAAA,KAbX;AAwBE,IAAA,WAAW,EAAE,qBAAAI,CAAC;AAAA,aAAI;AAAO,QAAA,CAAC,EAAE,CAAC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBA,CAAhB,OAAJ;AAAA,KAxBhB;AAyBE,IAAA,SAAS,EAAE,mBAAAA,CAAC;AAAA,aAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,CAAP,OAAJ;AAAA,KAzBd;AA0BE,IAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,CADA;AAEVC,MAAAA,WAAW,EAAE,CAFH;AAGVC,MAAAA,YAAY,EAAE,CAHJ;AAIVC,MAAAA,MAAM,EACJpD,KAAK,CAACqD,KAAN,GACA,gCADA,4BAEkBrD,KAAK,CAACmB,UAFxB,CALQ;AAQVmC,MAAAA,cAAc,EAAE,QARN;AASVC,MAAAA,YAAY,EAAE;AATJ,KA1Bd;AAqCE,IAAA,QAAQ,EAAE;AACRN,MAAAA,QAAQ,EAAE,CADF;AAERC,MAAAA,WAAW,EAAE,CAFL;AAGRC,MAAAA,YAAY,EAAE,CAHN;AAIRC,MAAAA,MAAM,EAAE,YAJA;AAIc;AACtBE,MAAAA,cAAc,EAAE,QALR;AAMRC,MAAAA,YAAY,EAAE,CAAC;AANP,KArCZ;AA6CE,IAAA,cAAc,EAAE,CA7ClB;AA8CE,IAAA,eAAe,EAAE,CA9CnB;AA+CE,IAAA,cAAc,EAAE;AAAEb,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW,GAAX,CAAD;AAA5B,KA/ClB;AAgDE,IAAA,OAAO,EAAE,CACP;AACEa,MAAAA,QAAQ,EAAE,MADZ;AAEEC,MAAAA,MAAM,EAAE,cAFV;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,OAAO,EAAE,KAJX;AAKEC,MAAAA,UAAU,EAAE,GALd;AAMEC,MAAAA,UAAU,EAAE,CANd;AAOEC,MAAAA,YAAY,EAAE,CAPhB;AAQEC,MAAAA,SAAS,EAAE,GARb;AASEC,MAAAA,UAAU,EAAE,EATd;AAUEC,MAAAA,aAAa,EAAE,eAVjB;AAWEC,MAAAA,WAAW,EAAE,IAXf;AAYEC,MAAAA,UAAU,EAAE,EAZd;AAaEC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,EAAE,EAAE,OADN;AAEEC,QAAAA,KAAK,EAAE;AACLJ,UAAAA,WAAW,EAAE;AADR;AAFT,OADO;AAbX,KADO,CAhDX;AAwEE,IAAA,OAAO,EAAE,IAxEX;AAyEE,IAAA,eAAe,EAAE,EAzEnB;AA0EE,IAAA,aAAa,EAAE,EA1EjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAwFD,CAjJD;;AAmJA,eAAenE,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport CsvDownloader from 'react-csv-downloader';\r\n\r\n\r\nconst Graph = props => {\r\n  console.log('keys in graph', props.keys)\r\n  console.log('data in graph', props.data)\r\n\r\n  const [csvHeaders, setCsvHeaders] = useState([]);\r\n  const [csvFormattedData, setCsvFormattedData] = useState([]);\r\n  console.log('Index in Graph', props.crossFilter);\r\n  console.log('CsvData in Graph', props.data);\r\n  // console.log('Keys in Graph', props.keys);\r\n\r\n  useEffect(() => {\r\n    if (props.filteredData && props.checkboxOptions !== props.filtgiteredData) {\r\n      props.setCheckboxOptions(props.filteredData);\r\n    }\r\n  }, []);\r\n\r\n  //Gets headers for CSV. \r\n  let headers = (data) => {\r\n    let allHeaders = [];\r\n    //no crossfilter\r\n    if (!props.crossFilter) {\r\n      console.log(\"HIT\")\r\n      allHeaders = [props.index];\r\n      allHeaders.push({ id: `${props.sampleSize}`, displayName: `Sample Size: ${props.sampleSize}` })\r\n    } else {\r\n      allHeaders = [\r\n        { id: `${props.index}`, displayName: `${props.index}` },\r\n        ...props.keys,\r\n        { id: `${props.additionalFilter}` },\r\n        { id: `${props.sampleSize}`, displayName: `Sample Size: ${props.sampleSize}` }\r\n      ]\r\n    }\r\n    return allHeaders;\r\n  }\r\n\r\n  let csvFormater = (data) => {\r\n    //if there's additionalFilter \r\n    if (props.additionalFilter) {\r\n      data = data.map(obj => {\r\n        let key = Object.keys(props.selectedCheckbox)[0];\r\n        let val = Object.values(props.selectedCheckbox)[0];\r\n        let o = Object.assign({}, obj);\r\n        o[key] = val;\r\n        return o;\r\n      })\r\n    }\r\n    return data.map(obj=> {return Object.values(obj)}) \r\n  }\r\n\r\n  let fileName = '';\r\n  fileName = `${props.index && props.index}${props.crossFilter && ('_by_' + props.crossFilter)}${props.additionalFilter && `_where_${props.additionalFilter}:(${Object.values(props.selectedCheckbox)[0]})`}`\r\n\r\n  useEffect(() => {\r\n    setCsvFormattedData(csvFormater(props.csvData))\r\n    setCsvHeaders(headers(props.csvData))\r\n  }, [props.csvData])\r\n  console.log(\"formater\", csvFormattedData)\r\n  return (\r\n    <div className=\"Graph-Container\">\r\n      <div className='dwnld-btn'>\r\n        <CsvDownloader\r\n          datas={csvFormattedData}\r\n          columns={csvHeaders}\r\n          filename={fileName}\r\n          suffix={`${new Date().toISOString()}`}\r\n        ><button>Download⯆</button></CsvDownloader>\r\n      </div>\r\n      <ResponsiveBar\r\n        data={props.data}\r\n        keys={props.keys}\r\n        indexBy={props.index}\r\n        groupMode={props.groupMode} // Possibly add toggle selector to change group mode.\r\n        margin={{ top: 50, right: 170, bottom: 75, left: 80 }}\r\n        padding={0.3}\r\n        innerPadding={3}\r\n        maxValue={100}\r\n        colors={{ scheme: \"nivo\" }}\r\n        borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        tooltip={({ id, value }) => (\r\n          <strong\r\n            style={{\r\n              color: \"#000000\",\r\n              fontSize: \"15px\",\r\n              fontFamily: \"Helvetica\"\r\n            }}\r\n          >\r\n            {id}: {value}%\r\n          </strong>\r\n        )}\r\n        labelFormat={d => <tspan y={-15}>{d}% </tspan>}\r\n        labelForm={d => <text>{d}% </text>}\r\n        axisBottom={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend:\r\n            props.label +\r\n            \" (values as percent of total),\" +\r\n            ` sample size = ${props.sampleSize}`,\r\n          legendPosition: \"middle\",\r\n          legendOffset: 35\r\n        }}\r\n        axisLeft={{\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: \"Percentage\", // Possibly toggle percentage or number in future release\r\n          legendPosition: \"middle\",\r\n          legendOffset: -60\r\n        }}\r\n        labelSkipWidth={0}\r\n        labelSkipHeight={0}\r\n        labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\r\n        legends={[\r\n          {\r\n            dataFrom: \"keys\",\r\n            anchor: \"bottom-right\",\r\n            direction: \"column\",\r\n            justify: false,\r\n            translateX: 120,\r\n            translateY: 0,\r\n            itemsSpacing: 2,\r\n            itemWidth: 100,\r\n            itemHeight: 20,\r\n            itemDirection: \"left-to-right\",\r\n            itemOpacity: 0.85,\r\n            symbolSize: 20,\r\n            effects: [\r\n              {\r\n                on: \"hover\",\r\n                style: {\r\n                  itemOpacity: 1\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ]}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={15}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"]},"metadata":{},"sourceType":"module"}