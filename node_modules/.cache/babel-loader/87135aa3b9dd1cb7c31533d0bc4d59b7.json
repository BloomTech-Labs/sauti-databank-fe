{"ast":null,"code":"export default function sum(values, valueof) {\n  var sum = 0;\n\n  if (valueof === undefined) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var value = _step.value;\n\n        if (value = +value) {\n          sum += value;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else {\n    var index = -1;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = values[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _value = _step2.value;\n\n        if (_value = +valueof(_value, ++index, values)) {\n          sum += _value;\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }\n\n  return sum;\n}","map":{"version":3,"sources":["C:/Users/mesty/Lambda/Forked-Lambda-Copies/labs 19/sauti-databank-fe/node_modules/d3-array/src/sum.js"],"names":["sum","values","valueof","undefined","value","index"],"mappings":"AAAA,eAAe,SAASA,GAAT,CAAaC,MAAb,EAAqBC,OAArB,EAA8B;AAC3C,MAAIF,GAAG,GAAG,CAAV;;AACA,MAAIE,OAAO,KAAKC,SAAhB,EAA2B;AAAA;AAAA;AAAA;;AAAA;AACzB,2BAAkBF,MAAlB,8HAA0B;AAAA,YAAjBG,KAAiB;;AACxB,YAAIA,KAAK,GAAG,CAACA,KAAb,EAAoB;AAClBJ,UAAAA,GAAG,IAAII,KAAP;AACD;AACF;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM1B,GAND,MAMO;AACL,QAAIC,KAAK,GAAG,CAAC,CAAb;AADK;AAAA;AAAA;;AAAA;AAEL,4BAAkBJ,MAAlB,mIAA0B;AAAA,YAAjBG,MAAiB;;AACxB,YAAIA,MAAK,GAAG,CAACF,OAAO,CAACE,MAAD,EAAQ,EAAEC,KAAV,EAAiBJ,MAAjB,CAApB,EAA8C;AAC5CD,UAAAA,GAAG,IAAII,MAAP;AACD;AACF;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAON;;AACD,SAAOJ,GAAP;AACD","sourcesContent":["export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n"]},"metadata":{},"sourceType":"module"}