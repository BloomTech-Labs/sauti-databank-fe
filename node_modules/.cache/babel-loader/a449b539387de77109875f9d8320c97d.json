{"ast":null,"code":"import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}","map":{"version":3,"sources":["C:/Users/mesty/Lambda/Forked-Lambda-Copies/labs 19/sauti-databank-fe/node_modules/graphql/error/GraphQLError.mjs"],"names":["isObjectLike","getLocation","printLocation","printSourceLocation","GraphQLError","message","nodes","source","positions","path","originalError","extensions","_nodes","Array","isArray","length","undefined","_source","node","loc","_positions","reduce","list","push","start","_locations","map","pos","_extensions","originalExtensions","Object","defineProperties","value","enumerable","writable","locations","Boolean","stack","defineProperty","configurable","Error","captureStackTrace","prototype","create","constructor","name","toString","printError","error","output","_i2","_error$nodes2","_i4","_error$locations2","location"],"mappings":"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","sourcesContent":["import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n"]},"metadata":{},"sourceType":"module"}