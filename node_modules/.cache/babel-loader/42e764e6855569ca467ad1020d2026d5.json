{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\mesty\\\\Lambda\\\\Forked-Lambda-Copies\\\\labs 19\\\\sauti-databank-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\mesty\\\\Lambda\\\\Forked-Lambda-Copies\\\\labs 19\\\\sauti-databank-fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\n//Gives an array of objects with a set of the Key: Value pairs\nvar getIndex = function getIndex(data, indexBy) {\n  // Shrinks objects to one single key:value pair specified by the indexBy\n  var cleanedArr = data.map(function (item) {\n    return item = _defineProperty({}, \"\".concat(indexBy), item[\"\".concat(indexBy)]);\n  }); // Reduces down to a set of the possible key:value pairs\n  // [{gender: male}, {gender: female}, {gender: null}]\n\n  return _toConsumableArray(new Set(cleanedArr.map(JSON.stringify))).map(JSON.parse);\n};\n\nexport default getIndex;","map":{"version":3,"sources":["C:/Users/mesty/Lambda/Forked-Lambda-Copies/labs 19/sauti-databank-fe/src/DataParseHelpers/getIndex.js"],"names":["getIndex","data","indexBy","cleanedArr","map","item","Set","JSON","stringify","parse"],"mappings":";;;AAAA;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAChC;AACA,MAAMC,UAAU,GAAGF,IAAI,CAACG,GAAL,CACjB,UAAAC,IAAI;AAAA,WAAKA,IAAI,iCAASH,OAAT,GAAqBG,IAAI,WAAIH,OAAJ,EAAzB,CAAT;AAAA,GADa,CAAnB,CAFgC,CAMhC;AACA;;AACA,SAAO,mBAAI,IAAII,GAAJ,CAAQH,UAAU,CAACC,GAAX,CAAeG,IAAI,CAACC,SAApB,CAAR,CAAJ,EAA6CJ,GAA7C,CAAiDG,IAAI,CAACE,KAAtD,CAAP;AACD,CATH;;AAWE,eAAeT,QAAf","sourcesContent":["//Gives an array of objects with a set of the Key: Value pairs\r\nconst getIndex = (data, indexBy) => {\r\n    // Shrinks objects to one single key:value pair specified by the indexBy\r\n    const cleanedArr = data.map(\r\n      item => (item = { [`${indexBy}`]: item[`${indexBy}`] })\r\n    );\r\n\r\n    // Reduces down to a set of the possible key:value pairs\r\n    // [{gender: male}, {gender: female}, {gender: null}]\r\n    return [...new Set(cleanedArr.map(JSON.stringify))].map(JSON.parse);\r\n  };\r\n\r\n  export default getIndex;"]},"metadata":{},"sourceType":"module"}