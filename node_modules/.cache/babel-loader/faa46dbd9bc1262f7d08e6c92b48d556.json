{"ast":null,"code":"import { slice } from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport range from \"./range.js\";\nimport { tickStep } from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\nexport default function () {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    } // Remove any thresholds outside the domain.\n\n\n    var m = tz.length;\n\n    while (tz[0] <= x0) {\n      tz.shift(), --m;\n    }\n\n    while (tz[m - 1] > x1) {\n      tz.pop(), --m;\n    }\n\n    var bins = new Array(m + 1),\n        bin; // Initialize bins.\n\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    } // Assign data to bins by value, ignoring any outside the domain.\n\n\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}","map":{"version":3,"sources":["C:/Users/mesty/Lambda/Forked-Lambda-Copies/labs 19/sauti-databank-fe/node_modules/d3-array/src/bin.js"],"names":["slice","bisect","constant","extent","identity","range","tickStep","sturges","value","domain","threshold","histogram","data","Array","isArray","from","i","n","length","x","values","xz","x0","x1","tz","Math","ceil","m","shift","pop","bins","bin","push","_","arguments","thresholds","call"],"mappings":"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","sourcesContent":["import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport range from \"./range.js\";\nimport {tickStep} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n"]},"metadata":{},"sourceType":"module"}