exports.__esModule=!0,exports.createClient=function(e,r,o){void 0===o&&(o={});return new t.ApolloClient({link:d({request:{query:r,variables:o},result:{data:e}}),cache:new n.InMemoryCache({addTypename:!1})})},exports.mockObservableLink=function(){return new y},exports.mockSingleLink=d,exports.stripSymbols=function(e){return JSON.parse(JSON.stringify(e))},exports.wait=function(e){return new Promise((function(r){return setTimeout(r,e)}))},exports.MockedProvider=exports.MockSubscriptionLink=exports.MockLink=void 0;var e=require("tslib"),r=c(require("react")),t=require("apollo-client"),n=require("apollo-cache-inmemory"),o=require("@apollo/react-common"),s=require("apollo-link"),i=require("apollo-utilities"),u=require("graphql/language/printer"),a=c(require("fast-json-stable-stringify"));function c(e){return e&&e.__esModule?e:{default:e}}function l(e,r){var t={query:e.query&&(0,u.print)(r?(0,i.addTypenameToDocument)(e.query):e.query)};return JSON.stringify(t)}var p=function(r){function t(e,t){void 0===t&&(t=!0);var n=r.call(this)||this;return n.addTypename=!0,n.mockedResponsesByKey={},n.addTypename=t,e&&e.forEach((function(e){n.addMockedResponse(e)})),n}return(0,e.__extends)(t,r),t.prototype.addMockedResponse=function(e){var r=this.normalizeMockedResponse(e),t=l(r.request,this.addTypename),n=this.mockedResponsesByKey[t];n||(n=[],this.mockedResponsesByKey[t]=n),n.push(r)},t.prototype.request=function(e){var r,t=l(e,this.addTypename),n=(this.mockedResponsesByKey[t]||[]).find((function(t,n){var o=e.variables||{},s=t.request.variables||{};return!!(0,i.isEqual)((0,a.default)(o),(0,a.default)(s))&&(r=n,!0)}));if(!n||void 0===r)throw new Error("No more mocked responses for the query: "+(0,u.print)(e.query)+", variables: "+JSON.stringify(e.variables));this.mockedResponsesByKey[t].splice(r,1);var o=n.newData;o&&(n.result=o(),this.mockedResponsesByKey[t].push(n));var c=n.result,p=n.error,d=n.delay;if(!c&&!p)throw new Error("Mocked response should contain either result or error: "+t);return new s.Observable((function(e){var r=setTimeout((function(){p?e.error(p):(c&&e.next("function"==typeof c?c():c),e.complete())}),d||0);return function(){clearTimeout(r)}}))},t.prototype.normalizeMockedResponse=function(e){var r=(0,i.cloneDeep)(e);r.request.query=(0,i.removeConnectionDirectiveFromDocument)(r.request.query);var t=(0,i.removeClientSetsFromDocument)(r.request.query);return t&&(r.request.query=t),r},t}(s.ApolloLink);function d(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var t=e[e.length-1],n=e.slice(0,e.length-1);return"boolean"!=typeof t&&(n=e,t=!0),new p(n,t)}exports.MockLink=p;var f=function(s){function i(e){var r=s.call(this,e)||this,o=r.props,i=o.mocks,u=o.addTypename,a=o.defaultOptions,c=o.cache,l=o.resolvers,d=o.link,f=new t.ApolloClient({cache:c||new n.InMemoryCache({addTypename:u}),defaultOptions:a,link:d||new p(i||[],u),resolvers:l});return r.state={client:f},r}return(0,e.__extends)(i,s),i.prototype.render=function(){var t=this.props,n=t.children,s=t.childProps;return n?r.default.createElement(o.ApolloProvider,{client:this.state.client},r.default.cloneElement(r.default.Children.only(n),(0,e.__assign)({},s))):null},i.prototype.componentWillUnmount=function(){this.state.client.stop()},i.defaultProps={addTypename:!0},i}(r.default.Component);exports.MockedProvider=f;var y=function(r){function t(){var e=r.call(this)||this;return e.unsubscribers=[],e.setups=[],e}return(0,e.__extends)(t,r),t.prototype.request=function(e){var r=this;return new s.Observable((function(e){return r.setups.forEach((function(e){return e()})),r.observer=e,function(){r.unsubscribers.forEach((function(e){return e()}))}}))},t.prototype.simulateResult=function(e,r){var t=this;void 0===r&&(r=!1),setTimeout((function(){var n=t.observer;if(!n)throw new Error("subscription torn down");r&&n.complete&&n.complete(),e.result&&n.next&&n.next(e.result),e.error&&n.error&&n.error(e.error)}),e.delay||0)},t.prototype.onSetup=function(e){this.setups=this.setups.concat([e])},t.prototype.onUnsubscribe=function(e){this.unsubscribers=this.unsubscribers.concat([e])},t}(s.ApolloLink);exports.MockSubscriptionLink=y;
