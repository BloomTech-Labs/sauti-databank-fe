"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = csv;
var newLine = '\r\n';

function csv(columns, datas) {
  var separator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';
  var noHeader = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var wrapColumnChar = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
  var columnOrder = columns ? columns.map(function (v) {
    return typeof v === 'string' ? v : v.id;
  }) : datas.reduce(function (acc, v) {
    return Array.isArray(v) ? acc : acc.concat(Object.keys(v));
  }, []).filter(function (value, index, self) {
    return self.indexOf(value) === index;
  });
  var content = [];

  if (!noHeader && columnOrder.length > 0) {
    var headers = columns ? columns.map(function (v) {
      if (typeof v === 'string') {
        return v;
      }

      if (typeof v.displayName !== 'undefined') {
        return v.displayName;
      }

      return v.id;
    }) : columnOrder;
    content.push(headers.map(function (header) {
      return wrapColumnChar + header + wrapColumnChar;
    }).join(separator));
  }

  if (Array.isArray(datas)) {
    datas.map(function (v) {
      return Array.isArray(v) ? v : columnOrder.map(function (k) {
        return typeof v[k] === 'undefined' ? '' : v[k];
      });
    }).forEach(function (v) {
      content.push(v.map(function (colVal) {
        return wrapColumnChar + colVal + wrapColumnChar;
      }).join(separator));
    });
  }

  return content.join(newLine);
}